/* CSS */
body {
    background-color: black; /* Set background color to black */
    height: 100vh; /* Set body height to 100% of viewport height */
    margin: 0rem; /* Remove default margin */
    overflow: visible; /* Hide overflow to prevent scrolling */
  }
  
  @keyframes rotate {
    from {
        rotate: 0deg; /* Initial rotation angle */
    }
    50% {
        scale: 1 1.5; /* Scale the blob to 1.5 times its original size at 50% of animation */
    }
    to {
        rotate: 360deg; /* Rotate the blob by 360 degrees at the end of animation */
  }
  }
  
  #blob {
    background-color: white; /* Set background color of the blob to white */
    height: 34vmax; /* Set height of the blob relative to the viewport maximum */
    aspect-ratio: 1; /* Set aspect ratio of the blob to maintain a square shape */
    position: fixed; /* Position the blob absolutely within its container */
    left: 50%; /* Position the blob horizontally at the center of its container */
    top: 50%; /* Position the blob vertically at the center of its container */
    translate: -50% -50%; /* Translate the blob to center it precisely */
    border-radius: 50%; /* Make the blob a perfect circle by setting border-radius to 50% */
    background: linear-gradient(to right, orange, darkcyan); /* Apply a linear gradient background */
    animation: rotate 15s infinite; /* Apply the rotate animation to the blob with a duration of 20 seconds and repeat infinitely */
    opacity: 0.8; /* Set opacity of the blob to 0.8 */
    z-index: -2;
  }
  
  #blur {
    height: 100vh; /* Set height of the blur element to cover the entire viewport */
    width: 100vw; /* Set width of the blur element to cover the entire viewport */
    position: fixed; /* Position the blur element absolutely within its container */
    z-index: -1; /* Set z-index to ensure it appears above other content */
    backdrop-filter: blur(12vmax); /* Apply a blur effect to the background of the blur element */
  }
  
  
  
  




/* styles.css */

/* Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: black;
    font-family: Arial, sans-serif;
    color: white;
    padding: 0;
}

header {
    padding: 5px;
    height: 12vh;
    display: flex;
    align-items: center;
}

#desktop-nav {
    height: 10vh;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: black;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1000;
}

.logo {
    font-size: 2rem;
    font-family: "Kode Mono", monospace;
    text-transform: uppercase;
    padding: 0 20px;
}

.logo:hover {
    transform: scale(1.1);
    text-shadow: 0 0 5px ghostwhite;
}

.nav-links {
    list-style: none;
    display: flex;
}

.nav-links li {
    padding: 0 10px;
}

.nav-links a {
    text-decoration: none;
    font-size: 1.2rem;
    color: whitesmoke;
    font-family: "Kode Mono", monospace;
}
/* empty space*/
.empty-space{
    height: 50vh;
}

.about {
    position: relative;
    margin-top: 10vh;
    display: flex; /* Add flexbox */
    flex-wrap: wrap; /* Allow wrapping */
    justify-content: center; /* Center content horizontally */
    text-align: center;
}

.about img {
    width: 70vw;
    height: auto;
    display: block;
    margin-bottom: 20px; /* Add margin for spacing */
}

.abpara {
    margin-top: 50px;
    display: flex;
    justify-content: center;
    align-items: flex-start;
/* padding:10%;*/
    width: 70vw;
    height: auto;
    text-align: left; /* Align text to left */
}

.abpara h2 {
    color: whitesmoke;
    font-family: "Kode Mono", monospace;
    text-transform: uppercase;
    width: 40%; /* Take 40% of the available space */
    display: inline-block; /* Display as inline block to allow width setting */
    vertical-align: top; /* Align to the top */
}
.abpara h2:hover{
    width: 40%;
}

.abpara p {
    line-height: 2.0; 
    width: 60%; /* Take 60% of the available space */
    display: inline-block; /* Display as inline block to allow width setting */
    vertical-align: top; /* Align to the top */
}

.abpara p a{
    color: gray;
}

/* Media Query for smaller screens */
@media (max-width: 768px) {
    .logo {
        font-size: 1.5rem;
    }

    .nav-links a {
        font-size: 1rem;
    }
}
/*  name suggests its work*/

.empty-space-after-contacts{
    height: 10vh;
}

/*      Ender     */
a {
    color: gray;
    text-decoration: none;
    position: relative;
  } 
.ender{
    margin-right: 13vw;
    margin-left: 13vw;
    width: 70vw;
  /*  margin-top: 5vh;
    margin-bottom: 10vh;
    margin-left: 3vw;
    margin-right: 3vw;*/
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.ender a {
    margin-bottom: 10px;
    font-size: 30px;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
.ender a img{
    width: 12vw;
}
h3, h4 a {
    color: gray;
    text-decoration: none;
    position: relative;
    transition: 0.5s;
}

h3 a::after , h4 a::after{
    width: 0;
    height: 3px;
    color: whitesmoke;
    background-color: whitesmoke;
    position: absolute;
    left: 0;
    bottom: -6px;
    transition: width 0.5s;
}

h3:hover, h3:hover::after, h3 a:hover , h4:hover, h4:hover::after, h4 a:hover {
    width: 100%;
    color: whitesmoke;
    transition: 0.5s;
}
.empty-space-end{
    height: 10vh;
}
.khatam{
    margin-top: 5vh;
   margin-bottom: 5vh;
   margin-left: 13vw;
}


/*border between ender*/

hr.solid {
    margin-left: 13vw;
    width: 70vw;
    border-bottom: 0px solid gray;
  }
